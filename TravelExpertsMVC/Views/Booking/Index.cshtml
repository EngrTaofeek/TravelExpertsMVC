@model IEnumerable<TravelExpertsData.ViewModels.BookingViewModel>

@{
    ViewData["Title"] = "Bookings";
}
@{
    var packages = ViewBag.Packages as IEnumerable<dynamic>; // Cast ViewBag.Packages to an enumerable
}

<h1>Create New Bookings</h1>

 <p>
     <a asp-action="Create">Create New</a>
 </p>
<h2 class="text-center mb-5 fw-bold">Our Packages Crafted Just For You</h2>
<!-- Bootstrap Carousel Structure -->
<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
    <ul class="carousel-indicators"></ul>
    <div class="carousel-inner"></div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<h1>Past Bookings</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BookingDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookingNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TravelersCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Balance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPaid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Package.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Package.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TripTypeName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BookingDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookingNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TravelersCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalPaid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Package.Name)
            </td>
            <td>
                 @Html.DisplayFor(modelItem => item.Package.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TripTypeName)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.BookingId">Details</a> 
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    <!-- Include the specific Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- Include the specific Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}

<script>
    const carouselInner = document.querySelector(".carousel-inner");
    const carouselIndicators = document.querySelector(".carousel-indicators");

    // Clear any previous items
    carouselInner.innerHTML = "";
    carouselIndicators.innerHTML = "";
    let slideIndex = 0;
    // Fetch all packages and apply details to the bootstrap
     function fetchAllPackages() {
        // Retrieve packages from ViewBag
        const packages = @Html.Raw(Json.Serialize(ViewBag.Packages));
        console.log(packages);


        // Clear any previous items
        carouselInner.innerHTML = "";
        carouselIndicators.innerHTML = "";

        packages.forEach((pkg, index) => {
            const packageId = pkg.Id;
            console.log(pkg);

            // Create indicator item
            const indicator = document.createElement("li");
            indicator.setAttribute("data-bs-target", "#carouselExampleIndicators");
            indicator.setAttribute("data-bs-slide-to", index);
            if (index === 0) {
                indicator.classList.add("active");
            }
            carouselIndicators.appendChild(indicator);

            // Create carousel item
            const carouselItem = document.createElement("div");
            carouselItem.classList.add("carousel-item");
            if (index === 0) {
                carouselItem.classList.add("active");
            }

            // Create the image element
            const img = document.createElement("img");
            img.classList.add("d-block", "w-100");
            img.src = pkg.imagePath;
            img.alt = `${pkg.name} image`;

            // Create caption
            const caption = document.createElement("div");
            caption.classList.add("carousel-caption", "d-none", "d-md-block");
            caption.innerHTML = `
                <h5>${pkg.name}</h5>
                <p style="color: #ffff;">${pkg.description}</p>
                <p style="color: #ffff;">${pkg.startDate.split("T")[0]} to ${pkg.endDate.split("T")[0]}</p>
                <h2>$ ${pkg.basePrice}</h2>

            `;

            // Create button (Bootstrap styled)
            const viewButton = document.createElement("button");
            viewButton.classList.add(
                "btn",
                "btn-primary",
                "position-absolute",
                "bottom-0",
                "end-0",
                "m-3"
            );
            viewButton.textContent = "Book this Package";

            // Add click listener to the button
            viewButton.addEventListener("click", (e) => {
               //navigate to booking page
            });

            // Append the button to the caption
            caption.appendChild(viewButton);

            // Append the image and caption to the carousel item
            carouselItem.appendChild(img);
            carouselItem.appendChild(caption);

            // Append the carousel item to the carousel inner
            carouselInner.appendChild(carouselItem);
        });
    }


    fetchAllPackages();

</script>
